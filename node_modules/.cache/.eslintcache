[{"/home/wappnet-17/workspace/navigation_treetask/navigation_tree/src/index.tsx":"1","/home/wappnet-17/workspace/navigation_treetask/navigation_tree/src/TreeView.tsx":"2","/home/wappnet-17/workspace/navigation_treetask/navigation_tree/src/App.tsx":"3"},{"size":219,"mtime":1634890203275,"results":"4","hashOfConfig":"5"},{"size":1232,"mtime":1634890562636,"results":"6","hashOfConfig":"5"},{"size":872,"mtime":1634890877794,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"byftq6",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/wappnet-17/workspace/navigation_treetask/navigation_tree/src/index.tsx",[],["16","17"],"/home/wappnet-17/workspace/navigation_treetask/navigation_tree/src/TreeView.tsx",["18","19"],"import React, { useState } from 'react';\nimport reportIcon  from './reportIcon.png';\n\ninterface ITreeViewProps {\n    index: number,\n    name: string,\n    data: any\n}\n\nconst TreeView: React.FC<ITreeViewProps> = ({ index, name, data }) => {\n\n    const [isToggle, setIsToggled] = useState<boolean>(false);\n\n    const toggleReport = (): void => {\n        setIsToggled(!isToggle)\n    }\n\n    return (\n        <>\n            <ul className={index == 0 ? 'tree' : ''}>\n                <li className={index == 0 ? 'tree_li' : ''}>\n                    {data && <input type=\"checkbox\" checked={isToggle} onChange={toggleReport} id={name} />}\n                    <label className={data ? \"tree_label\" : \"child_label tree_label\"} htmlFor={name}><span className={data ? \"label_dropdwn\" : \"\"}> {index === 0 && <img className=\"report-icon\" src={reportIcon} alt=\"root\"/>}  {name}</span></label>\n                    {isToggle && (\n                        data && data.map((node:any, key:number) => (\n                            <TreeView key={`node_${key}`} index={key + 1} name={node.name} data={node?.data} />\n                        ))\n                    )}\n                </li>\n            </ul>\n\n        </>\n    )\n}\n\nexport default TreeView;\n\n\n","/home/wappnet-17/workspace/navigation_treetask/navigation_tree/src/App.tsx",[],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":20,"column":34,"nodeType":"26","messageId":"27","endLine":20,"endColumn":36},{"ruleId":"24","severity":1,"message":"25","line":21,"column":38,"nodeType":"26","messageId":"27","endLine":21,"endColumn":40},"no-native-reassign",["28"],"no-negated-in-lhs",["29"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]