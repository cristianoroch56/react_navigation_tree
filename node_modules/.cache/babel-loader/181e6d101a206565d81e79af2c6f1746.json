{"ast":null,"code":"import _slicedToArray from\"/home/wappnet-17/workspace/navigation_treetask/navigation_tree/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import reportIcon from'./reportIcon.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TreeView=function TreeView(_ref){var index=_ref.index,name=_ref.name,data=_ref.data;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isToggle=_useState2[0],setIsToggled=_useState2[1];var toggleReport=function toggleReport(){setIsToggled(!isToggle);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"ul\",{className:index==0?'tree':'',children:/*#__PURE__*/_jsxs(\"li\",{className:index==0?'tree_li':'',children:[data&&/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isToggle,onChange:toggleReport,id:name}),/*#__PURE__*/_jsx(\"label\",{className:data?\"tree_label\":\"child_label tree_label\",htmlFor:name,children:/*#__PURE__*/_jsxs(\"span\",{className:data?\"label_dropdwn\":\"\",children:[\" \",index===0&&/*#__PURE__*/_jsx(\"img\",{className:\"report-icon\",src:reportIcon,alt:\"root\"}),\"  \",name]})}),isToggle&&data&&data.map(function(node,key){return/*#__PURE__*/_jsx(TreeView,{index:key+1,name:node.name,data:node===null||node===void 0?void 0:node.data},\"node_\".concat(key));})]})})});};export default TreeView;","map":{"version":3,"sources":["/home/wappnet-17/workspace/navigation_treetask/navigation_tree/src/TreeView.tsx"],"names":["React","useState","reportIcon","TreeView","index","name","data","isToggle","setIsToggled","toggleReport","map","node","key"],"mappings":"qLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,KAAwB,kBAAxB,C,6IAQA,GAAMC,CAAAA,QAAkC,CAAG,QAArCA,CAAAA,QAAqC,MAA2B,IAAxBC,CAAAA,KAAwB,MAAxBA,KAAwB,CAAjBC,IAAiB,MAAjBA,IAAiB,CAAXC,IAAW,MAAXA,IAAW,eAEjCL,QAAQ,CAAU,KAAV,CAFyB,wCAE3DM,QAF2D,eAEjDC,YAFiD,eAIlE,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAY,CAC7BD,YAAY,CAAC,CAACD,QAAF,CAAZ,CACH,CAFD,CAIA,mBACI,sCACI,WAAI,SAAS,CAAEH,KAAK,EAAI,CAAT,CAAa,MAAb,CAAsB,EAArC,uBACI,YAAI,SAAS,CAAEA,KAAK,EAAI,CAAT,CAAa,SAAb,CAAyB,EAAxC,WACKE,IAAI,eAAI,cAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,CAAEC,QAAhC,CAA0C,QAAQ,CAAEE,YAApD,CAAkE,EAAE,CAAEJ,IAAtE,EADb,cAEI,cAAO,SAAS,CAAEC,IAAI,CAAG,YAAH,CAAkB,wBAAxC,CAAkE,OAAO,CAAED,IAA3E,uBAAiF,cAAM,SAAS,CAAEC,IAAI,CAAG,eAAH,CAAqB,EAA1C,eAAgDF,KAAK,GAAK,CAAV,eAAe,YAAK,SAAS,CAAC,aAAf,CAA6B,GAAG,CAAEF,UAAlC,CAA8C,GAAG,CAAC,MAAlD,EAA/D,MAA6HG,IAA7H,GAAjF,EAFJ,CAGKE,QAAQ,EACLD,IAAI,EAAIA,IAAI,CAACI,GAAL,CAAS,SAACC,IAAD,CAAWC,GAAX,qBACb,KAAC,QAAD,EAA8B,KAAK,CAAEA,GAAG,CAAG,CAA3C,CAA8C,IAAI,CAAED,IAAI,CAACN,IAAzD,CAA+D,IAAI,CAAEM,IAAF,SAAEA,IAAF,iBAAEA,IAAI,CAAEL,IAA3E,iBAAuBM,GAAvB,EADa,EAAT,CAJhB,GADJ,EADJ,EADJ,CAgBH,CAxBD,CA0BA,cAAeT,CAAAA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport reportIcon  from './reportIcon.png';\n\ninterface ITreeViewProps {\n    index: number,\n    name: string,\n    data: any\n}\n\nconst TreeView: React.FC<ITreeViewProps> = ({ index, name, data }) => {\n\n    const [isToggle, setIsToggled] = useState<boolean>(false);\n\n    const toggleReport = (): void => {\n        setIsToggled(!isToggle)\n    }\n\n    return (\n        <>\n            <ul className={index == 0 ? 'tree' : ''}>\n                <li className={index == 0 ? 'tree_li' : ''}>\n                    {data && <input type=\"checkbox\" checked={isToggle} onChange={toggleReport} id={name} />}\n                    <label className={data ? \"tree_label\" : \"child_label tree_label\"} htmlFor={name}><span className={data ? \"label_dropdwn\" : \"\"}> {index === 0 && <img className=\"report-icon\" src={reportIcon} alt=\"root\"/>}  {name}</span></label>\n                    {isToggle && (\n                        data && data.map((node:any, key:number) => (\n                            <TreeView key={`node_${key}`} index={key + 1} name={node.name} data={node?.data} />\n                        ))\n                    )}\n                </li>\n            </ul>\n\n        </>\n    )\n}\n\nexport default TreeView;\n\n\n"]},"metadata":{},"sourceType":"module"}